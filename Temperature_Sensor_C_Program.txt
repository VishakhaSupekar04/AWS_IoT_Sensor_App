
/* Includes */
#include "mbed.h"
#include "XNucleoIKS01A2.h"

// Create a DigitalOut objects for the LED
DigitalOut led1(LED1, 1);
bool flag=false;
// Create a Serial objects to communicate via USB

// Create 2 Ticker objects for recurring interrupts. One for blink a LED and the other one to update the sensor lectures periodicly
Ticker t1;
Ticker t2;

// Initialize variables
/* Instantiate the expansion board */
static XNucleoIKS01A2 *mems_expansion_board = XNucleoIKS01A2::instance(D14, D15, D4, D5);

/* Retrieve the composing elements of the expansion board */
static HTS221Sensor *hum_temp = mems_expansion_board->ht_sensor;

// Handler for the aliveness LED; to be called every 0.5s
void blink()
{
    led1=!led1;
}
// Handler for the measurements update; rise a flag every 3 seconds
void updateFlag()
{
    flag =!flag;  //toggle flag to true
}

/* Simple main function */
int main()
{
    uint8_t id;
    float value1;
  
  /* Enable all sensors */
  hum_temp->enable();
  
  /* Attach a function to be called by the Ticker objects at a specific interval in seconds */
  t1.attach(&blink,0.5);
  t2.attach(&updateFlag,3);
  

  hum_temp->read_id(&id);
  
  while(1) {
    while(flag)
    {

    hum_temp->get_temperature(&value1);
    printf("\n\r%.2f", value1);
    flag = false;
    
    }
}
}